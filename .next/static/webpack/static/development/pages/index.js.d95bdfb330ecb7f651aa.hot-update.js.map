{"version":3,"file":"static/webpack/static/development/pages/index.js.d95bdfb330ecb7f651aa.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from \"../components/MyLayout\"\nimport { useState, useEffect } from 'react'\nimport ResultElem from \"../components/resultelem\"\nfunction TabellineApp() {\n\n    const [results, setResults]=useState([])\n    const [currentquestion, setCurrentquestion]=useState([2+Math.floor(Math.random()*8),2+Math.floor(Math.random()*8)])\n    const [currentanswer, setCurrentanswer]=useState(\"\")\n    const handleSubmit=(event)=>{ \n        setCurrentquestion([2+Math.floor(Math.random()*8),2+Math.floor(Math.random()*8)])\n        event.preventDefault()\n        setCurrentanswer('')\n        addResults()\n    } \n    const addResults=()=>{\n        let a=currentquestion[0] \n        let b=currentquestion[1] \n       \n        if ((a*b)===currentanswer) {\n            setResults((prevState)=>([{text:`${a}x${b}=${currentanswer}`,ok:true},...prevState]))\n        }\n        else {\n            setResults((prevState)=>([{text:`${a}x${b}=${currentanswer}`,ok:false},...prevState]))\n        }\n\n    }\n// useEffect (()=>{\n\n \n//     },[currentanswer])\n\n    const handleChange=(event)=>{\n        setCurrentanswer(parseInt(event.target.value,10))\n    }\n    const displayLog = ()=>results.map((r)=>(<ResultElem text={r.text} ok={r.ok} />))\n    \n    return (<div className=\"tabelline\">\n                <span className=\"fadein\" >Solve: {currentquestion[0]}X{currentquestion[1]}</span><br/><br/>\n                <form autocomplete=\"off\"  onSubmit={handleSubmit}>\n                    <input className=\"tabelline\" autofocus name=\"currentanswer\"  value={currentanswer} type=\"number\" onChange={handleChange}/>\n                    <button>ok</button>\n                 </form>\n                <div className=\"tabelline-log\">\n                  {displayLog()}\n                </div>\n            </div>)\n}\n\nexport default function Tabelline() {\n    return (<Layout content=<TabellineApp/> />)\n} \n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}